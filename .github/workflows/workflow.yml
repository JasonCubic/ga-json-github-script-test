name: test json
on:
  workflow_dispatch:
  push:
    branches:
      - main

# use act to run github actions locally
# https://github.com/nektos/act
# examples:
# act -P self-hosted=nektos/act-environments-ubuntu:18.04 -s GITHUB_TOKEN=""
# act -P self-hosted=catthehacker/ubuntu:act-latest -s GITHUB_TOKEN=""
# act -j test-json -P self-hosted=nektos/act-environments-ubuntu:18.04 -s GITHUB_TOKEN=""
# act -j test-json -P self-hosted=catthehacker/ubuntu:act-latest -s GITHUB_TOKEN=""
# act pull_request -P self-hosted=nektos/act-environments-ubuntu:18.04
#
# more info about using act with a GitHub pat: https://github.com/nektos/act#github_token

jobs:
  test-json:
    name: IT Buddy Dev - build and deploy
    runs-on: [self-hosted, Linux, X64]
    environment: dev
    outputs:
      output1: ${{steps.set-result.outputs.outputKey}}

    steps:
      # https://github.com/actions/github-script
      - uses: actions/github-script@v6
        id: set-result
        with:
          script: |
            core.setOutput('outputKey', {
              name: 'John',
              age: 30,
              city: 'New York',
              deep: {
                goes: ['yes', { cool: 'it goes deep!'}]
              }
            });
      - name: Get GitHub Script result while in the same job
        run: echo "${{steps.set-result.outputs.outputKey}}"
  second-job:
    name: second test job
    runs-on: [self-hosted, Linux, X64]
    environment: dev
    needs: test-json

    steps:
      - name: Get GitHub Script result from a different job
        run: echo "${{ needs.test-json.outputs.output1 }}"
      - name: Get name
        # fromJson changes it from a string to an object (or array)
        run: echo "${{ fromJson(needs.test-json.outputs.output1).name }}"
      - name: Get array key as string
        # toJson turns it back into a string
        run: echo "${{ toJson(fromJson(needs.test-json.outputs.output1).deep.goes) }}"
      - name: Get a deep value
        run: echo "${{ fromJson(needs.test-json.outputs.output1).deep.goes[1].cool }}"
